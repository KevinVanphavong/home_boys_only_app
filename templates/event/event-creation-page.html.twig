{% extends 'layout.html.twig' %}

{% block title %}Create an event - {{parent() }}{% endblock %}

{% block stylesheets %}
	{{ encore_entry_link_tags('event-form-scss') }}
{% endblock %}


{% block body %}
<div class="header-new-event">
    <img src="{{asset('build/images/las-vegas.jpg') }}" alt="">
</div>

<div class="section-title-new-event section-80">
    <h1 id="title-create-party" class="title-create-party">Commence par créer ta propre soirée !</h1>
    <br>
    <p>Après tu pourras inviter autant de monde que tu le souhaites</p>
    <br>
    <h2>COMMENT CRÉER UN ÉVÈNEMENT ?</h2>
    <ul>
    {% set var = [
        "Remplir toutes les informations nécessaires du formulaire en dessous",
        "Donner des détails sur la soirée dans l'encadré 'Présentation', comme une jolie teaser ;)",
        "Ajouter plusieurs photos de l'endroit où se passera la soirée",
        "Choisir une seule photo dans pour être la bannière des présentation de la soirée",
        "Appuyer sur le bouton “Créer ma soirée”",
    ] %}
    {% for i in 0.. ((var | length) - 1) %}
        <li>
            <svg xmlns="http://www.w3.org/2000/svg" id="test-icon" width="32" height="32" fill="green" class="bi bi-bookmark-check-fill" viewbox="0 0 16 16">
                <path fill-rule="evenodd" d="M2 15.5V2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.74.439L8 13.069l-5.26 2.87A.5.5 0 0 1 2 15.5zm8.854-9.646a.5.5 0 0 0-.708-.708L7.5 7.793 6.354 6.646a.5.5 0 1 0-.708.708l1.5 1.5a.5.5 0 0 0 .708 0l3-3z"/>
            </svg>
            <span>{{ 'STEP ' ~ (i+1) ~ ' - ' ~ var[i] }}</span>
        </li>
    {% endfor %}
    </ul>
</div>

<div class="section-80">
    {{ include('form/form-event.html.twig') }}
</div>

<script>
    const title = document.getElementById('title-create-party')
    const body = document.querySelector('body')

    // -------------- START - handling the display SVG icon
    const inputsWhatsIncluded = document.querySelectorAll('#event_gatheringComplementsIncluded input')
    const labelsWhatsIncluded = document.querySelectorAll('#event_gatheringComplementsIncluded label')
    const blockWhatsIncluded = document.querySelector('#event_gatheringComplementsIncluded')


    for (let index = 0; index < inputsWhatsIncluded.length; index++) {

        // 1) Transformer les span en icon
        const currentInput = inputsWhatsIncluded[index];
        currentInput.style.display = "none";

        const currentLabel = labelsWhatsIncluded[index];
        currentLabel.classList.add('material-icons');

        // le nom de l'icon SVG a mettre en texte pour la faire apparaitre
        const inputValue = currentInput.value;

        const paraph = document.createElement('p')
        paraph.innerText = inputValue
        paraph.style.textAlign = 'center'

        const div = document.createElement('div')
        div.classList.add('block-label-whats-included')
        div.appendChild(paraph)
        div.appendChild(currentLabel)

        blockWhatsIncluded.appendChild(div)

        // 2) Donner du style au input s'il sont checked true or false
        currentInput.addEventListener('change', function() {
            console.log(currentInput.checked)
            if (currentInput.checked == false) {
                currentLabel.classList.remove('checked')
            } else if (currentInput.checked == true) {
                currentLabel.classList.remove('not-checked')
                currentLabel.classList.add('checked')
            }
        })
    }

    const inputsWhatToBring = document.querySelectorAll('#event_gatheringComplementsToBring input')
    const labelsWhatToBring = document.querySelectorAll('#event_gatheringComplementsToBring label')
    const blockWhatToBring = document.querySelector('#event_gatheringComplementsToBring')


    for (let index = 0; index < inputsWhatToBring.length; index++) { 


        // 1) Transformer les span en icon
        const currentInput = inputsWhatToBring[index];
        currentInput.style.display = "none";

        const currentLabel = labelsWhatToBring[index];
        currentLabel.classList.add('material-icons');

        // le nom de l'icon SVG a mettre en texte pour la faire apparaitre
        const inputValue = currentInput.value;

        const paraph = document.createElement('p')
        paraph.innerText = inputValue
        paraph.style.textAlign = 'center'

        const div = document.createElement('div')
        div.classList.add('block-label-what-to-bring')
        div.appendChild(paraph)
        div.appendChild(currentLabel)

        blockWhatToBring.appendChild(div)


        // 2) Donner du style au input s'il sont checked true or false
        currentInput.addEventListener('change', function() {
            console.log(currentInput.checked)
            if (currentInput.checked == false) {
                currentLabel.classList.remove('checked')
            } else if (currentInput.checked == true) {
                currentLabel.classList.remove('not-checked')
                currentLabel.classList.add('checked')
            }
        })
    }

    // -------------- END - handling the display SVG icon


    // --------------- START - showing images pre upload from the form

    let blockPictures = document.createElement('div')
    blockPictures.classList.add('group-event-pictures')

    let rowPictures = document.querySelector('.event-form-row-pictures')
    let inputEventPictures = document.getElementById('event_eventPictures')

    inputEventPictures.addEventListener('change', function() {

        blockPictures.innerHTML = "";
        const files = inputEventPictures.files;

        // check : limit to 5 files
        // if upload more, only the 5 first will be set
        if (inputEventPictures.files.length > 5) {
            const dataTransfer = new DataTransfer();

            for (let index = 0; index < 5; index++) {
                const file = files[index]
                dataTransfer.items.add(file)
            }

            inputEventPictures.files = dataTransfer.files
        }
    
        for (let i = 0; i < inputEventPictures.files.length; i++) {
            const file = inputEventPictures.files[i];
            let image = document.createElement('img')
            image.src = URL.createObjectURL(file)
            image.alt = file.name

            blockPictures.appendChild(image)
        }

        rowPictures.appendChild(blockPictures);

    })

// ------

    let blockCover = document.createElement('div')
    blockCover.classList.add('group-event-cover')

    let rowCover = document.querySelector('.event-form-row-cover')  

    let inputEventCover = document.getElementById('event_eventCover')
    inputEventCover.addEventListener('change', function() {

        blockCover.innerHTML = ""

        const files = inputEventCover.files

        let image = document.createElement('img')
        image.src = URL.createObjectURL(files[0])

        blockCover.appendChild(image)
        rowCover.appendChild(blockCover)

    })

    // --------------- END - showing images pre upload from the form
</script>


{% endblock %}
