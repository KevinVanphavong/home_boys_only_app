{% extends 'layout.html.twig' %}

{% block title %}Mes informations personnelles{% endblock %}

{% block stylesheets %}
	{{ encore_entry_link_tags('user-form-scss') }}
{% endblock %}


{% block body %}
<section class="section-80 header admin-user-infos">
    <h1 class="title-account-user">BIENVENUE SUR VOTRE ESPACE PERSONNEL</h1>
    <br>
    <p>
        {{ partygoer.firstname ~ ' ' ~ partygoer.lastname }},
        partir de votre espace utilisateur, si tu le souhaites tu peux :
    </p>
    <br>
    <ul>
        <li><span class="material-icons star">verified</span><p>Revoir les soirées auxquelles tu as participés</p></li>
        <li><span class="material-icons star">verified</span><p>Accéder aux soirées de ta wishlist</p></li>
        <li><span class="material-icons star">verified</span><p>Compléter et modifier tes informations personnelles</p></li>
        <li><span class="material-icons star">verified</span><p>Discuter avec les autres personnes</p></li>
        <li><span class="material-icons star">verified</span><p>Consulter tes notifications sur la soirées et invitations en cours</p></li>
    </ul>

    <br>

    <div class="block-profile-picture">
        <div class="profile-picture-old">
        {% if partygoer.profileImage %}
            <img src="{{ asset('uploads/profilePicture/partygoer_id_' ~ (partygoer.id) ~ '/' ~ (partygoer.profileImage.name)) }}" alt="">
        {% endif %}
        </div>
        <div class="profile-picture-new">
        </div>
    </div>

    <div class="admin-user-infos-content">
        {{ include('form/form-partygoer.html.twig') }}
    </div>
</section>
{% endblock %}

{% block javascripts %}
<script>
// ---------- display profile picture once upload in input
    let inputProfilePicture = document.querySelector('#partygoer_profilePicture');
    let blockNewProfilePicture = document.querySelector('.profile-picture-new');

    inputProfilePicture.addEventListener('change', function(){

        blockNewProfilePicture.innerHTML = "";

        const files = inputProfilePicture.files

        let image = document.createElement('img')    
        image.src = URL.createObjectURL(files[0])

        blockNewProfilePicture.append(image)
    })
// ---------- display profile picture once upload in input


// Créer une fonction pour dupliquer 10 inputs d'un groupe
// 0) Déclarer la fonction qui prendra 2 params (html element, array placeholder)
// 1) Récupérer l'élément HTML en querySelector
// 2) Récupérer son élément parent dans une variable
// 3) Récupérer le tableau de palceholder envoyé en params
// 3.5) Transformer la valeur de cette propriété (string) en tableau (si toute fois il y a deja une valeur renseignée en bdd)
// 4) Créer une boucle de 10 itérations pour
    // 5) cloner l'élement html
    // 6) insérer une la valeur du tableau récemment transformé sinon chaine vide
    // 7) ajouter le placeholder
    // 8) l'insérer dans l'élement parent
// 9) remove le premier input
let inputLifeInterests = document.querySelector('.user-form-input-life-interests')
let inputMusicTastes = document.querySelector('.user-form-input-music-tastes')
let inputFoodTastes = document.querySelector('.user-form-input-food-tastes')
const arrayPlaceholder = {
    life : [
        'Animaux',
        'Concert',
        'Voyages',
        'Langues étrangères',
        'Jeux vidéos',
        'Danser',
        'Custom des vêtements',
        'Peindre',
        'Lecture',
        'Manga',
    ],
    music : [
        'Hip Hop',
        'Pop',
        'Soul',
        'Electro',
        'Reggae',
        'Rap',
        'Funk',
        'Trap',
        'RnB',
        'Techno',
    ]
    ,
    food : [
        'Hip Hop',
        'Pop',
        'Soul',
        'Electro',
        'Reggae',
        'Rap',
        'Funk',
        'Trap',
        'RnB',
        'Techno',
    ]
}

function duplicateTenInputs(firstInput, arrayPlaceholder) {
    let arrayValues = firstInput.value.split(',')
    let parent = firstInput.parentElement

    for (let index = 0; index < 10; index++) {
        let clone = firstInput.cloneNode(true)
        if (arrayValues[index] === undefined) {
            clone.value = ""
        } else {
            clone.value = arrayValues[index]
        }
        clone.placeholder = arrayPlaceholder[index]
        
        parent.appendChild(clone)        
    }

    parent.removeChild(firstInput)
}

duplicateTenInputs(inputLifeInterests, arrayPlaceholder['life'])
duplicateTenInputs(inputMusicTastes, arrayPlaceholder['music'])
duplicateTenInputs(inputFoodTastes, arrayPlaceholder['food'])


// // ------ Delay submit for sending another HTTP request handling lifeInterests
let userForm = document.getElementById('user-form');
let btnValidateLifeInterests = document.querySelector('.btn-validate-personal-interests');


function createArrayValuesFrom10GroupInputs(inputs) {
    let content = []
    inputs.forEach(element => {
        content.push(element.value)
    });

    return content
}

btnValidateLifeInterests.addEventListener('click', function(e) {
    e.preventDefault();
    // Envoyer la 2eme requete HTTP pour les centres d'intérêts
    let allInputsLifeInterests = document.querySelectorAll('.user-form-input-life-interests')
    let allInputsMusicTastes = document.querySelectorAll('.user-form-input-music-tastes')
    let allInputsFoodTastes = document.querySelectorAll('.user-form-input-food-tastes')

    let lifeInterests = createArrayValuesFrom10GroupInputs(allInputsLifeInterests)
    let musicTastes = createArrayValuesFrom10GroupInputs(allInputsMusicTastes)
    let foodTastes = createArrayValuesFrom10GroupInputs(allInputsFoodTastes)

    fetch(btnValidateLifeInterests.href, {
        method: "POST",
        headers: {
            'X-Requested-With': "XMLHttpRequest",
            'Content-Type': "application/json" 
        },
        body: JSON.stringify({lifeInterests,musicTastes,foodTastes})
    })
})
    // .then(function(response) {
    //     return response.json();
    // })
    // .then(function(response) {
    //     button.classList.add('btn-event-set-cancellation-on');
    //     button.innerText = "Soirée annulée";
    // })

// ------ Delay submit for sending another HTTP request handling lifeInterests
</script>
{% endblock %}