{% extends 'layout.html.twig' %}

{% block title %}Mes soirées à organiser
{% endblock %}

{% block stylesheets %}
	{{ encore_entry_link_tags('account-dashboard-parties-scss') }}

    <style>
    </style>
{% endblock %}

{% block body %}
<section class="body-container">
    <section class="section-80 header">
        <h1>MES SOIRÉES À ORGANISER</h1>
        <br>
        <p>Vous pouvez consulter vos différentes conversations ici :</p>
        <ul>
            <li>- avec les organisateurs des soirées</li>
            <li>- avec les invités qui souhaitent venir à votre soirée !</li>
        </ul>
        <p>{{ partygoer.firstname ~ ' ' ~ partygoer.lastname ~ ' id:' ~ partygoer.id }}</p>
    </section>

    <section class="dashboard-section">
        <hr>
        <div class="menu-dashboard-btn">
            <a href="" data-ref="parties" class="btn-dashboard btn-to-parties">Mes soirées</a>
            <a href="" data-ref="comments" class="btn-dashboard btn-dashboard-active btn-to-comments">Mes commentaires</a>
            <a href="" data-ref="invits" class="btn-dashboard btn-to-invits">Mes invitations reçues</a>
        </div>
        <hr>

        <div data-ref="parties" class="section-dashboard dashboard-sub-section section-my-parties">
            {% for date in arrayDatesFromEvents %}
                <br>
                <h4 class="event-date-group">{{ date|date('M Y') }}</h4>
                <div class="block-group-event-by-date">
                    {% for party in parties %}
                        {% if party.startingDate == date %}
                            <div class="event-card">
                                {% if party.eventCover is not null %}
                                    <img class="card-cover-background" src="{{ asset( publicFolderEventCover ~ '/' ~ party.eventCover.name) }}" alt="">
                                {% else %}
                                    <div class="card-cover-background background-gradient" src="" alt="background-gradient"></div>
                                {% endif %}
                                <div class="half-card half-top-card">
                                    <h5>{{ party.title }}</h5>
                                    <h5>{{ party.startingDate|date('d M Y')}}</h5>
                                </div>
                                <div class="half-card half-bottom-card">
                                    <a href="{{ path('display-event', {'id': party.id, 'title':party.title }) }}">Voir</a>
                                    <a href="{{ path('edit-event', {'id': party.id, 'title': party.title }) }}">Modifier</a>
                                    {% if party.isVisible and party.isCanceled == false %}
                                        <a class="btn-event-set-visibility btn-success" href="{{ path('event-set-visibility', {'eventId': party.id}) }}">Visible</a>
                                    {% else %}
                                        <a class="btn-event-set-visibility btn-danger {{ party.isCanceled ? 'btn-event-set-cancellation-on' }}" href="{{ path('event-set-visibility', {'eventId': party.id}) }}">Masqué</a>
                                    {% endif %}

                                    {% if party.isCanceled %}
                                        <a href="#" class="btn-event-set-cancellation-on">Soirée annulée</a>
                                    {% else %}
                                        <a class="btn-event-set-cancellation" href="{{ path('event-set-cancellation', {'eventId': party.id}) }}">Annuler</a>
                                    {% endif %}
                                </div>
                            </div>
                        {% endif %}
                    {% endfor %}
                </div>
                <hr class="w-50 m-auto">
            {% endfor %}
        </div>

        <div data-ref="comments" class="section-dashboard-active section-dashboard dashboard-sub-section section-my-comments">     
            {% for item in arrayEventTitleFromComments %}
                <br>
                <div class="block-comment-header">
                    <h4 class="comment-title-group">{{ item.title }}</h4>
                    <p>{{ item.startingDate|date('d-m-Y') }}</p>
                </div>

                <div class="block-comment-by-title">
                    {% for comment in comments %}
                        {% if comment.event.id == item.id  %}
                        <div class="comment-card-background">
                            <div class="comment">

                                <div class="comment-block-author">
                                    {% if comment.author.profileImage %}
                                        <img class="comment-author-profile-picture" src="{{ asset( publicFolderProfilePicture ~ '/partygoer_id_' ~ comment.author.id ~ '/' ~ comment.author.profileImage.name ) }}" alt="">
                                    {% else %}
                                        <img class="comment-author-profile-picture" src="{{ asset('build/images/thumbnail-profile.jpg') }}" alt="">
                                    {% endif %}
                                    <p>{{ comment.author.firstname ~ ' ' ~ comment.author.lastname }}</p>
                                </div>

                                <div class="comment-block-content">
                                    <h5>{{ comment.event.title ~ ' (id:' ~ comment.event.id ~ ')'}}</h5>
                                    <p>{{ comment.content }}</p>
                                    <div class="comment-visibility">
                                        <div class="form-switch">
                                            <span>Masqué</span>
                                            <input class="form-check-input btn-comment-set-visibility" {{ comment.isVisible ? 'checked' }} type="checkbox" data-href="{{ path('comment-set-visibility', {'commentId': comment.id}) }}">
                                            <span>Visible</span>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                        {% endif %}
                    {% endfor %}
                </div>
                <hr class="w-50 m-auto">
            {% endfor %}
        </div>

        <div data-ref="invits" class="section-dashboard dashboard-sub-section section-my-invits">
            {% for invit in invitations %}
            <div class="invitation-card-background">
                <div class="invitation">
                    <div class="invit-block-partygoer">
                        {% if invit.partygoerGuest.profileImage %}
                            <img class="invit-partygoer-profile-picture" src="{{ asset( publicFolderProfilePicture ~ '/partygoer_id_' ~ invit.partygoerGuest.id ~ '/' ~ invit.partygoerGuest.profileImage.name ) }}" alt="">
                        {% else %}
                            <img class="invit-partygoer-profile-picture" src="{{ asset('build/images/thumbnail-profile.jpg') }}" alt="">
                        {% endif %}
                        <p>{{ invit.partygoerGuest.firstname ~ ' ' ~ invit.partygoerGuest.lastname }}</p>
                    </div>
                    <div class="invit-block-content">
                        <div class="invit-block-infos">
                            <p>Demande d'invitation pour :</p>
                            <b>
                                <p>{{ invit.event.title }}</p>
                            </b>
                        </div>
                        <a href="#" class="btn btn-warning">Voir profil</a>
                        <div class="invit-block-acceptation">
                            <div class="form-switch">
                                <label for="acceptation{{ invit.id }}">Refusé</label>
                                <input name="acceptation{{ invit.id }}" id="acceptation{{ invit.id }}" class="form-check-input btn-invit-set-acceptation" {{ invit.isAccepted ? 'checked' }} type="checkbox" data-href="{{ path('invit_set_acceptation', {'invitId': invit.id}) }}">
                                <label for="acceptation{{ invit.id }}">Accepté</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            {% endfor %}
        </div>
    </section>
</section>
{% endblock %}

{% block javascripts %}
    <script>
        {% block JavascriptMyParties %}
                // -------- fetching buttons actions on each event cart
                let buttonsEventVisibility = document.querySelectorAll('.btn-event-set-visibility');
                let buttonsEventCancellation = document.querySelectorAll('.btn-event-set-cancellation');

                // -------- create functions settings visibility and cancellation on event
                function setEventVisibility(button) {
                    fetch(button.href, {
                        method: "POST",
                        headers: {
                        'X-Requested-With': "XMLHttpRequest",
                        'Content-Type': "application/json" 
                    }
                    })
                    .then(function(response) {
                        return response.json();
                    })
                    .then(function(response) {
                        if (response.visibility == true){
                            button.innerText = "Visible"
                            button.classList.add('btn-success');
                            button.classList.remove('btn-danger');
                        } else if (response.visibility == false){
                            button.innerText = "Masqué";
                            button.classList.add('btn-danger');
                            button.classList.remove('btn-success');
                        }
                    })
                }

                function setEventCancellation(button) {
                    fetch(button.href, {
                        method: "POST",
                        headers: {
                        'X-Requested-With': "XMLHttpRequest",
                        'Content-Type': "application/json" 
                    }
                    })
                    .then(function(response) {
                        return response.json();
                    })
                    .then(function(response) {
                        button.classList.add('btn-event-set-cancellation-on');
                        button.innerText = "Soirée annulée";
                    })
                }

                // -------- adding event listener on each button fetched with functions created earlier
                buttonsEventVisibility.forEach(button => {
                    button.addEventListener('click', function(event){
                        event.preventDefault();

                        setEventVisibility(button);
                    });
                });

                buttonsEventCancellation.forEach(button => {
                    button.addEventListener('click', function(event){
                        event.preventDefault();

                        let response = confirm('Souhaitez vous vraiment annulez cet évènement ? L\'action sera irréversible')

                        if (response){
                            setEventCancellation(button);
                            setEventVisibility(button.previousElementSibling);
                            button.previousElementSibling.style.pointerEvents = "none";
                        }
                    });
                });
        {% endblock %}
        {% block JavascriptMySlider %}
            // SLIDER BUT NOT A REAL SLIDER
            let buttonsDashboard = document.querySelectorAll('.btn-dashboard');
            let sectonsDashboard = document.querySelectorAll('.section-dashboard');

            buttonsDashboard.forEach(button => {
                button.addEventListener('click', function(event){
                    event.preventDefault();

                    if (button.classList.contains('btn-dashboard-active')){
                        return;
                    } else {
                        oldActiveButton = document.querySelector('.btn-dashboard-active');
                        oldActiveButton.classList.remove('btn-dashboard-active');

                        button.classList.add('btn-dashboard-active');
                        let reference = button.dataset.ref;

                        oldActiveSection = document.querySelector('.section-dashboard-active');
                        oldActiveSection.classList.remove('section-dashboard-active');

                        newActiveSection = document.querySelector(".section-dashboard[data-ref='" + reference + "']");
                        newActiveSection.classList.add('section-dashboard-active')
                    }
                })    
            });
        {% endblock %}
        {% block JavascriptMyComments %}
            let buttonsCommentVisibility = document.querySelectorAll('.btn-comment-set-visibility')

            function setCommentVisibility(button) {
                    fetch(button.dataset.href, {
                        method: "POST",
                        headers: {
                        'X-Requested-With': "XMLHttpRequest",
                        'Content-Type': "application/json" 
                    }
                    })
                    .then(function(response) {
                        return response.json();
                    })
                    .then(function(response) {
                        if(response.visibility == true){
                            button.checked = true;
                        } else {
                            button.checked = false;
                        }
                    })
            }

            buttonsCommentVisibility.forEach(button => {
                button.addEventListener('click', function(event){
                    event.preventDefault();

                    setCommentVisibility(button);
                })
            });  
        {% endblock %}
        {% block JavascriptMyInvits %}
            let buttonsInvitAcceptation = document.querySelectorAll('.btn-invit-set-acceptation')

            function setInvitAcceptation(button) {
                fetch(button.dataset.href, {
                    method: "POST",
                    headers: {
                    'X-Requested-With': "XMLHttpRequest",
                    'Content-Type': "application/json" 
                }
                })
                .then(function(response) {
                    return response.json();
                })
                .then(function(response) {
                    if(response.acceptation == true){
                        button.checked = true;
                    } else {
                        button.checked = false;
                    }
                })
            }
            
            buttonsInvitAcceptation.forEach(button => {
                button.addEventListener('click', function(event){
                    event.preventDefault();

                    setInvitAcceptation(button);
                })
            });
        {% endblock %}
    </script>
{% endblock %}


